{"ast":null,"code":"import { ServiceUrlBuilder } from 'src/ServiceUrlBuilder';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GetUserInfoService {\n  constructor(http) {\n    this.http = http;\n  }\n  GetAllInfo() {\n    return this.http.get(ServiceUrlBuilder.buildUrl('user'));\n  }\n  getUserById(id) {\n    const url = ServiceUrlBuilder.buildUrl(`user/${id}`);\n    return this.http.get(url);\n  }\n}\nGetUserInfoService.ɵfac = function GetUserInfoService_Factory(t) {\n  return new (t || GetUserInfoService)(i0.ɵɵinject(i1.HttpClient));\n};\nGetUserInfoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GetUserInfoService,\n  factory: GetUserInfoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,iBAAiB,QAAQ,uBAAuB;;;AAOzD,OAAM,MAAOC,kBAAkB;EAC7BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EAEvCC,UAAU;IACR,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAASL,iBAAiB,CAACM,QAAQ,CAAC,MAAM,CAAC,CAAC;EAClE;EAEAC,WAAW,CAACC,EAAU;IACpB,MAAMC,GAAG,GAAGT,iBAAiB,CAACM,QAAQ,CAAC,QAAQE,EAAE,EAAE,CAAC;IACpD,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAOI,GAAG,CAAC;EACjC;;AAVWR,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAS,SAAlBT,kBAAkB;EAAAU,YAFjB;AAAM","names":["ServiceUrlBuilder","GetUserInfoService","constructor","http","GetAllInfo","get","buildUrl","getUserById","id","url","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\DevTeam\\Desktop\\BankFront\\bankfront\\src\\app\\services\\get-user-info.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ServiceUrlBuilder } from 'src/ServiceUrlBuilder';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/User';\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetUserInfoService {\n  constructor(private http: HttpClient) {}\n\n  GetAllInfo(): Observable<User[]> {\n    return this.http.get<User[]>(ServiceUrlBuilder.buildUrl('user'));\n  }\n\n  getUserById(id: number): Observable<User> {\n    const url = ServiceUrlBuilder.buildUrl(`user/${id}`);\n    return this.http.get<User>(url);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}